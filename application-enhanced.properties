# Route Optimizer Service - Enhanced Configuration
# Configuración mejorada para manejo de múltiples trabajos concurrentes

# ===================================
# CONFIGURACIÓN DEL SERVIDOR
# ===================================
server.port=8085
server.servlet.context-path=/
spring.application.name=route-optimizer-service

# URL base para responses
server.base-url=http://localhost:8085

# ===================================
# CONFIGURACIÓN DE BASE DE DATOS
# ===================================
# Base de datos H2 en memoria para desarrollo
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Configuración JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Console H2 para desarrollo
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===================================
# CONFIGURACIÓN DE OPTIMIZACIÓN
# ===================================
# Número máximo de trabajos concurrentes
optimization.max-concurrent-jobs=5

# Timeout para trabajos en minutos
optimization.job-timeout-minutes=10

# Número de reintentos para llamadas fallidas
optimization.retry-attempts=3

# ===================================
# CONFIGURACIÓN DE THREAD POOL
# ===================================
# Thread pool para procesamiento de optimizaciones
optimization.thread-pool.core-size=4
optimization.thread-pool.max-size=10
optimization.thread-pool.queue-capacity=50
optimization.thread-pool.keep-alive-seconds=60

# ===================================
# CONFIGURACIÓN DE SERVICIOS EXTERNOS
# ===================================
# URL del servicio de procesamiento de rutas
route.processing.service.url=http://localhost:8086

# Timeouts para WebClient
spring.webflux.timeout.connect=30s
spring.webflux.timeout.read=300s
spring.webflux.timeout.write=30s

# ===================================
# CONFIGURACIÓN DE RABBITMQ
# ===================================
# RabbitMQ connection settings
rabbitmq.host=localhost
rabbitmq.port=5672
rabbitmq.username=guest
rabbitmq.password=guest
rabbitmq.virtual-host=/

# Queue names
rabbitmq.queues.optimization-jobs=route_optimization_jobs
rabbitmq.queues.optimization-results=route_optimization_results

# Enable/disable RabbitMQ integration
rabbitmq.enabled=true

# ===================================
# CONFIGURACIÓN DE CORS
# ===================================
cors.allowed-origins=http://localhost:4200,http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.allowed-headers=*
cors.allow-credentials=true

# ===================================
# CONFIGURACIÓN DE ACTUATOR
# ===================================
# Endpoints de monitoreo
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Métricas personalizadas
management.metrics.enable.all=true
management.metrics.export.prometheus.enabled=true

# ===================================
# CONFIGURACIÓN DE LOGGING
# ===================================
# Nivel de logging
logging.level.com.exiua.routeoptimizer=INFO
logging.level.org.springframework.web.reactive=DEBUG
logging.level.io.netty=WARN

# Patrón de logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Archivo de logging
logging.file.name=logs/route-optimizer-service.log
logging.file.max-size=10MB
logging.file.max-history=10

# ===================================
# CONFIGURACIÓN DE JACKSON
# ===================================
# Serialización JSON
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ===================================
# CONFIGURACIÓN DE CACHE
# ===================================
# Cache para resultados de optimización
spring.cache.type=simple
spring.cache.cache-names=optimization-results,mock-data

# ===================================
# CONFIGURACIÓN DE SEGURIDAD
# ===================================
# Configuración básica de seguridad (desarrollo)
security.basic.enabled=false
security.headers.frame=false

# ===================================
# CONFIGURACIÓN DE SWAGGER/OPENAPI
# ===================================
# Documentación API
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# ===================================
# CONFIGURACIÓN DE DESARROLLO/PRODUCCIÓN
# ===================================
# Profile activo (development, staging, production)
spring.profiles.active=development

# ===================================
# CONFIGURACIONES ESPECÍFICAS POR PROFILE
# ===================================

---
# Profile de desarrollo
spring.config.activate.on-profile=development

# Más logging en desarrollo
logging.level.com.exiua.routeoptimizer=DEBUG
logging.level.org.springframework=INFO

# Timeouts más cortos para desarrollo
optimization.job-timeout-minutes=5
optimization.max-concurrent-jobs=3

# RabbitMQ opcional en desarrollo
rabbitmq.enabled=false

---
# Profile de producción
spring.config.activate.on-profile=production

# Base de datos PostgreSQL para producción
spring.datasource.url=jdbc:postgresql://localhost:5432/route_optimizer
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA para producción
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# Logging para producción
logging.level.com.exiua.routeoptimizer=INFO
logging.level.root=WARN

# Configuración de producción
optimization.max-concurrent-jobs=10
optimization.job-timeout-minutes=15
optimization.thread-pool.core-size=8
optimization.thread-pool.max-size=20

# RabbitMQ habilitado en producción
rabbitmq.enabled=true
rabbitmq.host=${RABBITMQ_HOST:rabbitmq-server}
rabbitmq.username=${RABBITMQ_USERNAME:optimizer}
rabbitmq.password=${RABBITMQ_PASSWORD}

# URLs de producción
server.base-url=${SERVER_BASE_URL:https://api.exiua.com}
route.processing.service.url=${ROUTE_PROCESSING_URL:http://route-processing-service:8086}

---
# Profile de testing
spring.config.activate.on-profile=test

# Base de datos H2 para tests
spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.hibernate.ddl-auto=create-drop

# Configuración mínima para tests
optimization.max-concurrent-jobs=2
optimization.job-timeout-minutes=2
rabbitmq.enabled=false

# Logging mínimo para tests
logging.level.com.exiua.routeoptimizer=WARN
logging.level.org.springframework=WARN